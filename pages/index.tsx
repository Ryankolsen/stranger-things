import type { NextPage } from "next";
import Head from "next/head";
import styles from "../styles/Home.module.css";
import { useQuery, useQueryClient } from "@tanstack/react-query";
import { useRouter } from "next/router";
import { useForm, Resolver } from "react-hook-form";

interface Props {
  NASA_API: string;
}

interface Inputs {
  inputDate: string;
}

const resolver: Resolver<Inputs> = async (values) => {
  return {
    values: values.inputDate ? values : {},
    errors: !values.inputDate
      ? {
          inputDate: {
            type: "minLength",
            message: "Please enter a date in yyyy-mm-dd format.",
          },
        }
      : {},
  };
};

const Home = (props: Props) => {
  const router = useRouter();
  const API_Key = props.NASA_API;
  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm<Inputs>({ resolver });
  const onSubmit = handleSubmit((data) =>
    router.push(`/nasa/${data.inputDate}`)
  );
  async function fetchData() {
    const link = `https://api.nasa.gov/mars-photos/api/v1/rovers/curiosity/photos?earth_date=2015-6-3&api_key=${API_Key}`;
    const imageData = await fetch(link)
      .then((response) => response.json())
      .then((data) => {
        console.log(data);
        return data;
      });
    return imageData;
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>NASA App</title>
        <meta name="NASA app" content="Generated by ryank" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <>
          <h1 className="text-4xl text-center p-4">NASA</h1>

          <button className="bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-2 px-4 border border-blue-500 hover:border-transparent rounded">
            Search
          </button>
          <div>
            <form className="p-4" onSubmit={onSubmit}>
              <label>
                Earth Date:{" "}
                <input className="text-gray-900" {...register("inputDate")} />
              </label>
              <input type={"submit"} />
            </form>
            {errors.inputDate && <p>{errors.inputDate.message}</p>}
          </div>
        </>
      </main>
    </div>
  );
};

export async function getStaticProps() {
  return {
    props: {
      NASA_API: process.env.NASA_API,
    },
  };
}

export default Home;
