import { useRouter } from "next/router";
import Head from "next/head";
import { useQuery, useQueryClient } from "@tanstack/react-query";
import Image from "next/image";

interface Props {
  date: string;
  data: {
    photos: {
      id: number;
      sol: number;
      camera: {
        id: number;
        name: string;
        rover_id: string;
        full_name: string;
      };
      img_src: string;
      earth_date: string;
      rover: {
        id: number;
        name: string;
        landing_date: string;
        launch_date: string;
        status: string;
      };
    }[];
  };
}

const NasaByDate = (props: Props) => {
  const router = useRouter();
  const queryClient = useQueryClient();
  const { data, isLoading, isError } = useQuery(["fetchData"], {
    initialData: props.data,
  });

  return (
    <>
      <Head>
        <title>NASA App</title>
        <meta name="NASA app" content="Generated by ryank" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <>
          {router.isFallback || isLoading ? (
            <p>loading...</p>
          ) : data?.photos ? (
            <>
              <div>
                <h1>Images From {props.date}</h1>
                {data.photos.map((photo) => {
                  return (
                    <div key={photo.id}>
                      <Image
                        width={500}
                        height={500}
                        src={photo.img_src}
                        alt={`Image from ${photo.camera.full_name}`}
                      />
                    </div>
                  );
                })}
              </div>
            </>
          ) : !data ? (
            <p>Sorry, no results. Please search again for a different date</p>
          ) : isError ? (
            <p> {isError}</p>
          ) : null}
        </>
      </main>
    </>
  );
};
export default NasaByDate;

interface Context {
  params: {
    date: string;
  };
}
export async function getStaticProps(context: Context) {
  const { date } = context.params;

  //TODO add fetch

  const API_KEY = process.env.NASA_API;
  const link = `https://api.nasa.gov/mars-photos/api/v1/rovers/curiosity/photos?earth_date=${date}&api_key=${API_KEY}`;
  const data = await fetch(link).then((res) => res.json());
  console.log(data);

  return {
    props: {
      date,
      data,
    },
  };
}

export function getStaticPaths() {
  return {
    paths: [
      {
        params: {
          date: "2015-6-3",
        },
      },
    ],
    fallback: true,
  };
}
